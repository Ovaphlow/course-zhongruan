<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

  <!-- Spring 框架的配置文件 -->
  <!--通过IOC（控制反转）来预先将其它框架运行-->
  <!--IOC 是指将 Java Bean 或框架的控制权交到 Spring 手里-->
  <!--DI （依赖注入）-->
  <!--同时将需要的模块或者类预先加载到内存里-->
  <!--加快程序的运行效率-->
  <!--但会延长程序启动时间-->

  <!-- 读取 jdbc 配置文件 -->
  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:jdbc.properties</value>
      </list>
    </property>
  </bean>

  <!-- 配置连接池 Hikari -->
  <bean id="dataSourceHikari" class="com.zaxxer.hikari.HikariDataSource" destroy-method="shutdown">
    <property name="driverClassName" value="${driverClass}"/>
    <property name="jdbcUrl" value="${jdbcUrl}"/>
    <property name="username" value="${user}"/>
    <property name="password" value="${password}"/>
  </bean>

  <!-- MyBatis 的 SqlSessionFactory 配置 -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <!-- 指定数据源 -->
    <property name="dataSource" ref="dataSourceHikari"/>
    <!-- 映射文件的位置 -->
    <property name="mapperLocations" value="classpath:mapper/*.xml" />
    <!-- 给映射的类配置别名 -->
    <!-- 默认的别名是model类的首字母小写 -->
    <!-- 如：StaffDeploy实体类。别名为：staffDeploy -->
    <!--<property name="typeAliasesPackage" value="entity"/>-->
  </bean>

  <!--加载 dao 包-->
  <!--DI-->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="dao"/>
  </bean>

  <!-- 自动注入 Service 层 -->
  <context:component-scan base-package="service"/>

  <!-- Spring 事务-->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSourceHikari"/>
  </bean>

  <!-- 基于注解的声明式事务 -->
  <tx:annotation-driven transaction-manager="transactionManager" />
</beans>
